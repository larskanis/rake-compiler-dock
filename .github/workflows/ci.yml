name: Build docker images
concurrency:
  group: "${{github.workflow}}-${{github.ref}}"
  cancel-in-progress: true
on: [push, pull_request]

jobs:
  # These jobs use Buildx layer caching
  docker_build:
    name: Build

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: x86-mingw32
          - platform: x64-mingw-ucrt
          - platform: x64-mingw32
          - platform: x86-linux
          - platform: x86_64-linux
          - platform: x86_64-darwin
          - platform: arm64-darwin
          - platform: arm-linux
          - platform: aarch64-linux
          - platform: jruby

    runs-on: ubuntu-latest
    env:
      PLATFORM: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: tmp/build-cache
          key: ${{ runner.os }}-${{ matrix.platform }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}-buildx

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
        if: matrix.platform == 'aarch64-linux'

      - name: Enable Multiarch
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        if: matrix.platform == 'aarch64-linux'

      - name: Create builder
        run: |
          docker buildx create --name mbuilder
          docker buildx use mbuilder
          docker buildx inspect
          docker buildx ls
        if: matrix.platform == 'aarch64-linux'

      - name: Export Docker Buildx arguments
        run: |
          echo "DOCKER_BUILDX_ARGS=--platform=linux/arm64" >> $GITHUB_ENV
        if: matrix.platform == 'aarch64-linux'

      - name: Build docker image
        run: |
          docker buildx create --driver docker-container --use
          bundle exec rake build:${PLATFORM} RCD_DOCKER_BUILD="docker buildx build ${DOCKER_BUILDX_ARGS} --cache-from=type=local,src=tmp/build-cache --cache-to=type=local,dest=tmp/build-cache-new --load"

      - name: Move build cache and remove outdated layers
        run: |
          rm -rf tmp/build-cache
          mv tmp/build-cache-new tmp/build-cache

      - name: Build rcd_test.gem
        run: |
          gem build rake-compiler-dock.gemspec
          gem install -l rake-compiler-dock-*.gem
          cd test/rcd_test/
          bundle install
          bundle exec rake gem:${PLATFORM}

      - name: Upload binary gem
        uses: actions/upload-artifact@v2
        with:
          name: gem-${{ matrix.platform }}
          path: test/rcd_test/pkg/*-*-*.gem

      - name: Upload source gem
        uses: actions/upload-artifact@v2
        if: matrix.platform == 'jruby'
        with:
          name: gem-ruby
          path: test/rcd_test/pkg/*-?.?.?.gem


  job_test_native:
    name: Test
    needs: docker_build
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows
            ruby: "3.0"
            platform: x64-mingw32
          - os: windows
            ruby: "2.4"
            platform: x64-mingw32
          - os: macos
            ruby: "3.0"
            platform: x86_64-darwin
          - os: macos
            ruby: "2.4"
            platform: x86_64-darwin
          - os: ubuntu
            ruby: "3.0"
            platform: x86_64-linux
          - os: ubuntu
            ruby: "2.4"
            platform: x86_64-linux
          - os: ubuntu
            ruby: jruby-head
            platform: jruby
          - os: ubuntu
            ruby: "3.0"
            platform: ruby

    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - run: ruby --version

      - name: Download gem from build job
        uses: actions/download-artifact@v2
        with:
          name: gem-${{ matrix.platform }}

      - run: gem install --local *.gem --verbose

      - name: Run tests
        run: |
          cd test/rcd_test/
          bundle install
          ruby -rrcd_test -S rake test

  job_test_multiarch:
    name: Test
    needs: docker_build
    strategy:
      fail-fast: false
      matrix:
        include:
          - from_image: amd64/centos
            platform: x86_64-linux
            dockerfile: centos
          - from_image: navikey/raspbian-bullseye
            platform: arm-linux
            dockerfile: debian
          - from_image: arm64v8/ubuntu
            platform: aarch64-linux
            dockerfile: debian
          - from_image: i386/alpine
            platform: x86-linux
            dockerfile: alpine
          - from_image: arm32v6/alpine
            platform: arm-linux
            dockerfile: alpine

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download gem from build job
        uses: actions/download-artifact@v2
        with:
          name: gem-${{ matrix.platform }}

      - name: Build image and Run tests
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker build --rm --build-arg from_image=${{matrix.from_image}} -t ruby-test -f test/env/Dockerfile.${{matrix.dockerfile}} .
          docker run --rm -t --network=host -v `pwd`:/build ruby-test
